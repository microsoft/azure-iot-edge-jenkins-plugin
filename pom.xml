<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.jenkins-ci.plugins</groupId>
        <artifactId>plugin</artifactId>
        <version>2.6</version>
    </parent>

    <artifactId>azure-iot-edge</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>hpi</packaging>

    <properties>
        <!-- Baseline Jenkins version you use to build the plugin. Users must have this version or newer to run. -->
        <jenkins.version>1.651.3</jenkins.version>
        <java.level>7</java.level>
        <!-- Other properties you may want to use:
          ~ jenkins-test-harness.version: Jenkins Test Harness version you use to test the plugin. For Jenkins version >= 1.580.1 use JTH 2.0 or higher.
          ~ hpi-plugin.version: The HPI Maven Plugin version used by the plugin..
          ~ stapler-plugin.version: The Stapler Maven plugin version required by the plugin.
     -->
        <jackson.version>2.7.0</jackson.version>
        <guava.version>19.0</guava.version>
        <powermock.version>1.7.0RC2</powermock.version>
        <azuresdk.version>1.13.0</azuresdk.version>
        <azure-credentials.version>1.6.0</azure-credentials.version>
        <azure-commons.version>0.2.6</azure-commons.version>
        <version.docker-java>3.0.10</version.docker-java>
        <version.jenkins.docker-commons>1.4.0</version.jenkins.docker-commons>
    </properties>

    <name>Azure IoT Edge Plugin</name>
    <description>A Jenkins plugin for continuous integration(build and push docker image) and continuous deployment(create Edge deployment on Azure)</description>
    <!-- The default licence for Jenkins OSS Plugins is MIT. Substitute for the applicable one if needed. -->

    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://opensource.org/licenses/MIT</url>
        </license>
    </licenses>

    <dependencies>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <dependency>
            <groupId>com.microsoft.azure</groupId>
            <artifactId>azure</artifactId>
            <version>${azuresdk.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>azure-credentials</artifactId>
            <version>${azure-credentials.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>azure-commons-core</artifactId>
            <version>${azure-commons.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>azure-commons</artifactId>
            <version>${azure-commons.version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.docker-java</groupId>
            <artifactId>docker-java</artifactId>
            <!-- use latest version https://github.com/docker-java/docker-java/releases -->
            <version>${version.docker-java}</version>
        </dependency>

        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>git-client</artifactId>
            <version>3.11.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>git</artifactId>
            <version>3.9.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>docker-commons</artifactId>
            <version>${version.jenkins.docker-commons}</version>
        </dependency>

        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20180130</version>
        </dependency>

        <dependency>
            <groupId>com.microsoft.azure</groupId>
            <artifactId>applicationinsights-core</artifactId>
            <!-- or applicationinsights-core for bare API -->
            <version>[2.0,)</version>
        </dependency>
    </dependencies>

    <developers>
      <developer>
        <id>azure_iot_tooling</id>
        <name>Microsoft Azure IoT Tooling</name>
        <email>vsciet@microsoft.com</email>
      </developer>
    </developers>

    <url>https://wiki.jenkins.io/display/JENKINS/Azure+IoT+Edge+Plugin</url>
    <scm>
        <connection>scm:git:git://github.com/jenkinsci/${project.artifactId}-plugin.git</connection>
        <developerConnection>scm:git:git@github.com:jenkinsci/${project.artifactId}-plugin.git</developerConnection>
        <url>https://github.com/jenkinsci/${project.artifactId}-plugin</url>
    </scm>

    <repositories>
        <repository>
            <id>repo.jenkins-ci.org</id>
            <url>https://repo.jenkins-ci.org/public/</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>repo.jenkins-ci.org</id>
            <url>https://repo.jenkins-ci.org/public/</url>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <resources>
            <resource>
                <directory>${project.basedir}</directory>
                <includes>
                    <include>ThirdPartyNotices.txt</include>
                    <include>LICENSE.txt</include>
                </includes>
            </resource>

            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.jenkins-ci.tools</groupId>
                <artifactId>maven-hpi-plugin</artifactId>
                <configuration>
                    <pluginFirstClassLoader>true</pluginFirstClassLoader>
                    <maskClasses>
                        com.microsoft.jenkins.azurecommons.core.
                        com.microsoft.azure.management.
                        com.google.common.
                    </maskClasses>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.2</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.20.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <forkCount>7</forkCount>
                    <reuseForks>true</reuseForks>
                    <threadCountMethods>7</threadCountMethods>
                    <parallel>methods</parallel>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.17</version>
                <configuration>
                    <configLocation>checkstyle.xml</configLocation>
                    <encoding>UTF-8</encoding>
                    <consoleOutput>true</consoleOutput>
                    <resourceIncludes>src/main/resources/**</resourceIncludes>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
